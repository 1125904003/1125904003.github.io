(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{308:function(t,e,r){"use strict";r.r(e);var n=r(12),u=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"前端开发之vue篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端开发之vue篇"}},[t._v("#")]),t._v(" 前端开发之Vue篇")]),t._v(" "),e("h2",{attrs:{id:"vue-发展历程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-发展历程"}},[t._v("#")]),t._v(" Vue 发展历程")]),t._v(" "),e("p",[t._v("Vue.js 是一款流行的前端框架，由尤雨溪在2014年开发并首次发布。它采用了组件化开发的思想，能够使用户快速构建动态的单页应用程序。以下是 Vue.js 发展历程的主要内容：")]),t._v(" "),e("p",[t._v("2014年：Vue.js 0.8 发布。第一版的 Vue.js 在发布后得到了广泛的关注，尤雨溪从 Backbone.js 和 Angular.js 中汲取灵感，结合他自己的观点，创作了这个充满活力的框架。")]),t._v(" "),e("p",[t._v("2015年：Vue.js 1.0 发布。在第一个主要版本中，Vue.js 更加稳定和成熟，支持服务端渲染和组件复用，并获得了更多的关注。")]),t._v(" "),e("p",[t._v("2016年：Vue.js 2.0 发布。在第二个主要版本中，Vue.js 更加高效、简单和灵活，增加了虚拟 DOM 和异步渲染等功能。")]),t._v(" "),e("p",[t._v("2017年：Vue.js 社区不断壮大。Vue.js 生态圈不断壮大，出现了大量的第三方插件和库，如 Vuex、Vue Router、Element UI 等，Vue.js 的使用率逐渐上升。")]),t._v(" "),e("p",[t._v("2018年：Vue.js 3.0 开始开发。Vue.js 3.0 的开发开始于2018年，其目标是更好的性能、更好的开发体验和更好的扩展性。其中最大的变化是使用了 TypeScript。")]),t._v(" "),e("p",[t._v("2019年：Vue 3.0 发布候选版本。Vue.js 3.0 在2019年发布了候选版本，更新了响应式系统、组件 API 等，更加简单和易用，同时减少了打包大小，提高了性能。")]),t._v(" "),e("p",[t._v("2020年：Vue.js 3.0 正式发布。在经过长时间的开发和测试之后，Vue.js 3.0 正式发布了，在性能、开发体验和扩展性方面都有了很大的改进，并成为了当前最受欢迎的前端框架之一。")]),t._v(" "),e("p",[t._v("总之，随着 Vue.js 的不断发展，它已经成为了一个强大且灵活的前端框架，如今被广泛应用于构建单页应用程序和可复用组件，同时也是前端开发者学习和掌握的必备技能之一。")]),t._v(" "),e("h2",{attrs:{id:"基于vue的前端ui库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于vue的前端ui库"}},[t._v("#")]),t._v(" 基于Vue的前端UI库")]),t._v(" "),e("p",[t._v("UI库是一组能够满足通用的UI设计需求的用户界面组件、样式和交互效果的集合，具有良好的可复用性、可扩展性和规范性。简单来说，UI库就是一套经过系统设计和打包的UI组件库，为前端开发工作提供了便利。")]),t._v(" "),e("p",[t._v("UI库通常包含各种基础组件如按钮、输入框、表格、列表、下拉菜单等，还有一些高级 UI 组件和模板，如轮播图、模态框、瀑布流、树形控件等。这些组件和模板的设计风格、颜色、尺寸等都是统一的，使用起来非常方便，也能确保整个网站的风格一致性。")]),t._v(" "),e("p",[t._v("UI库的存在可以极大地提高前端开发的效率和质量。对于有丰富UI设计经验的前端开发工程师或UI设计师来说，可以通过不断地调整和优化UI库中的组件，最终达到设计目标。对于刚开始接触前端开发的人，学习如何使用UI库搭建一个符合要求的页面是一个较好的入门方法。此外，UI库还有一些其他的优点，包括：")]),t._v(" "),e("p",[t._v("1️⃣：提高前端开发效率，减少开发时间；"),e("br"),t._v("\n2️⃣：优化用户体验，确保网页风格统一性；"),e("br"),t._v("\n3️⃣：避免重复代码编写，提高代码复用性和维护性；"),e("br"),t._v("\n4️⃣：可以让前端开发者专注于业务逻辑的实现。")]),t._v(" "),e("h3",{attrs:{id:"pc端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pc端"}},[t._v("#")]),t._v(" PC端")]),t._v(" "),e("p",[e("strong",[t._v("Element UI")]),t._v("是一个面向桌面端的Vue.js组件库，主要针对PC端Web应用程序。虽然它支持响应式设计，但其UI组件并不是专门为移动设备设计的，因此在移动设备上使用时可能需要进行额外的适配工作。而且，Element UI的一些组件在小屏幕上展示效果可能不太理想。所以，Element UI更适合用于构建PC端Web应用程序。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://element.eleme.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://element.eleme.io"),e("OutboundLink")],1),e("br"),t._v("\nGithub地址："),e("a",{attrs:{href:"https://github.com/ElemeFE/element",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ElemeFE/element"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"移动端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端"}},[t._v("#")]),t._v(" 移动端")]),t._v(" "),e("p",[e("strong",[t._v("Vant")]),t._v("是一个基于Vue.js的移动端UI组件库，旨在帮助开发人员快速构建高质量的移动应用程序。它提供了丰富的UI组件和易于使用的API，包括按钮、表单、弹窗、下拉刷新、滑块等常见的移动端UI组件。由于Vant专注于移动端，因此其UI组件经过了精心设计和优化，能够很好地适应不同尺寸的移动设备屏幕，并具有流畅的交互效果和良好的用户体验。所以，Vant可以被视为一款专门用于移动端应用程序开发的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://vant-contrib.gitee.io/vant",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vant-contrib.gitee.io/vant"),e("OutboundLink")],1),e("br"),t._v("\nGithub地址："),e("a",{attrs:{href:"https://github.com/youzan/vant",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/youzan/vant"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("Mint UI")]),t._v("是一个基于Vue.js的移动端UI组件库，旨在帮助开发人员快速构建高质量的移动应用程序。它提供了丰富的UI组件和易于使用的API，包括按钮、表单、弹窗、滑块、日期选择器等常见的移动端UI组件。Mint UI的设计风格简洁明了，非常适合用于创建移动端应用程序。由于Mint UI专注于移动端，因此其UI组件经过了精心设计和优化，能够很好地适应不同尺寸的移动设备屏幕，并具有流畅的交互效果和良好的用户体验。所以，Mint UI可以被视为一款专门用于移动端应用程序开发的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://mint-ui.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mint-ui.github.io/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub地址："),e("a",{attrs:{href:"https://github.com/ElemeFE/mint-ui",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ElemeFE/mint-ui"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("vux")]),t._v("是一个基于Vue.js的移动端UI组件库，旨在帮助开发人员快速构建高质量的移动应用程序。它提供了丰富的UI组件和易于使用的API，包括按钮、表单、列表、弹窗、下拉刷新等常见的移动端UI组件。vux的设计风格简洁清新，支持主题定制，并且能够很好地适应不同尺寸的移动设备屏幕，具有流畅的交互效果和良好的用户体验。所以，vux可以被视为一款专门用于移动端应用程序开发的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://vux.li/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vux.li/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub地址："),e("a",{attrs:{href:"https://github.com/airyland/vux",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/airyland/vux"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("we-vue")]),t._v("是一个基于Vue.js的移动端UI组件库，旨在帮助开发人员快速构建高质量的移动应用程序。它提供了丰富的UI组件和易于使用的API，包括按钮、表单、卡片、进度条、选项卡等常见的移动端UI组件。we-vue的设计风格简洁明了，符合现代化移动应用程序的设计规范，支持主题定制，并且能够很好地适应不同尺寸的移动设备屏幕，具有流畅的交互效果和良好的用户体验。所以，we-vue可以被视为一款专门用于移动端应用程序开发的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://wevue.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wevue.org/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/tianyong90/we-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/tianyong90/we-vue"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"pc端和移动端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pc端和移动端"}},[t._v("#")]),t._v(" PC端和移动端")]),t._v(" "),e("p",[e("strong",[t._v("iView")]),t._v("是一个基于Vue.js的UI组件库，旨在帮助开发人员快速构建高质量的Web应用程序。它提供了丰富的UI组件和易于使用的API，并支持可定制的主题和灵活的布局系统。由于iView遵循响应式设计原则，它的UI组件可以轻松适应不同的设备尺寸，因此iView可以同时用于PC端和移动端的Web应用程序。但需要注意的是，在移动设备上使用时可能需要进行额外的适配工作，以确保iView组件在小屏幕上展示效果良好。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://www.iviewui.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.iviewui.com/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/iview/iview",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/iview/iview"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("Vuetify")]),t._v("是一个基于Material Design设计规范的UI库，可以用于构建PC端和移动端的Web应用程序。它提供了丰富的UI组件和易于使用的API，可帮助开发人员快速构建出美观、易用、高质量的Web应用程序。由于Vuetify遵循响应式设计原则，因此它的UI组件可以轻松地适应不同的设备尺寸，包括桌面、平板电脑和手机等。因此，Vuetify可以被视为一款适用于多种不同设备的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://vuetifyjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vuetifyjs.com/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/vuetifyjs/vuetify",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/vuetifyjs/vuetify"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("Ant Design Vue")]),t._v("是一个企业级UI设计语言和Vue组件库，可以用于构建PC端和移动端的Web应用程序。它提供了丰富的UI组件和易于使用的API，可帮助开发人员快速构建美观、易用、高质量的Web应用程序。Ant Design Vue支持响应式设计，因此它的UI组件可以轻松地适应不同的设备尺寸，包括桌面、平板电脑和手机等。因此，Ant Design Vue可以被视为一款适用于多种不同设备的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://www.antdv.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.antdv.com/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/vueComponent/ant-design-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/vueComponent/ant-design-vue"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("BootstrapVue")]),t._v("是一个基于Bootstrap 4的Vue UI组件库，可以用于构建PC端和移动端的Web应用程序。它提供了丰富的UI组件和易于使用的API，可帮助开发人员快速构建美观、易用、高质量的Web应用程序。BootstrapVue支持响应式设计，因此它的UI组件可以轻松地适应不同的设备尺寸，包括桌面、平板电脑和手机等。因此，BootstrapVue可以被视为一款适用于多种不同设备的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://bootstrap-vue.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bootstrap-vue.org/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/bootstrap-vue/bootstrap-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/bootstrap-vue/bootstrap-vue"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("Quasar Framework")]),t._v("是一个全面的Vue.js框架，可以用于构建PC端、移动端和电视等多种类型的应用程序。它提供了丰富的UI组件和工具，并提供易于使用的API和文档。Quasar Framework支持响应式设计，因此它的UI组件可以轻松地适应不同的设备尺寸，包括桌面、平板电脑、手机和电视等。因此，Quasar Framework可以被视为一款适用于多种不同设备的UI库。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://quasar.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://quasar.dev/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/quasarframework/quasar",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/quasarframework/quasar"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"基于vue的前端框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于vue的前端框架"}},[t._v("#")]),t._v(" 基于Vue的前端框架")]),t._v(" "),e("p",[e("strong",[t._v("Nuxt.js")]),t._v("：基于 Vue 的服务端渲染框架，提供了一套完整的开发工具链。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://nuxtjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://nuxtjs.org/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/nuxt/nuxt.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/nuxt/nuxt.js"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("VuePress")]),t._v("：一个基于 Vue 的静态网站生成器，适用于编写文档、博客和小型网站等。"),e("br"),t._v("\n官网地址："),e("a",{attrs:{href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vuepress.vuejs.org/"),e("OutboundLink")],1),e("br"),t._v("\nGitHub 地址："),e("a",{attrs:{href:"https://github.com/vuejs/vuepress",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/vuejs/vuepress"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=u.exports}}]);